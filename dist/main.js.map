{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/heroes/heroes.component.css","webpack:///./src/app/heroes/heroes.component.html","webpack:///./src/app/heroes/heroes.component.ts","webpack:///./src/app/services/talk.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeroesComponent }      from './heroes/heroes.component';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  { path: 'heroes', component: HeroesComponent }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routes)\n  ],\n  exports: [\n   RouterModule\n  ],\n  declarations: []\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<div id=\\\"navbar-full\\\">\\n    <div class=\\\"container\\\">\\n        <nav class=\\\"navbar navbar-ct-blue navbar-transparent navbar-fixed-top\\\" role=\\\"navigation\\\">\\n          \\n          <div class=\\\"container\\\">\\n            <!-- Brand and toggle get grouped for better mobile display -->\\n            <div class=\\\"navbar-header\\\">\\n                <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\">\\n                    <span class=\\\"sr-only\\\">Toggle navigation</span>\\n                    <span class=\\\"icon-bar\\\"></span>\\n                    <span class=\\\"icon-bar\\\"></span>\\n                    <span class=\\\"icon-bar\\\"></span>\\n                </button>\\n                <a href=\\\"http://creative-tim.com\\\">\\n                     <div class=\\\"logo-container\\\">\\n                        <div class=\\\"logo\\\">\\n                            <img src=\\\"assets/img/new_logo.png\\\">\\n                        </div>\\n                        <div class=\\\"brand\\\">\\n                            Harry's Helper\\n                        </div>\\n                    </div>\\n                </a>\\n            </div>\\n        \\n            <!-- Collect the nav links, forms, and other content for toggling -->\\n            <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n              <ul class=\\\"nav navbar-nav navbar-right\\\">\\n                    <!-- <li><a href=\\\"components.html\\\">Components</a></li> -->\\n                    \\n                    <!-- <li><a href=\\\"http://www.creative-tim.com/product/get-shit-done-kit\\\" class=\\\"btn btn-round btn-default\\\">A Quote</a></li> -->\\n               </ul>\\n              \\n            </div><!-- /.navbar-collapse -->\\n          </div><!-- /.container-fluid -->\\n        </nav>\\n    </div><!--  end container-->\\n    \\n    <div class='blurred-container'>\\n        <div class=\\\"motto\\\">\\n            <div id=\\\"mainTitle\\\">Possibilities of..</div>\\n            <!-- <div class=\\\"border no-right-border\\\">Sh</div> -->\\n            <div class=\\\"wordDivContainer\\\">\\n            <!-- (input)=\\\"searchTerm = $event.target.innerText\\\" (keyup)=\\\"searchTermSetter(searchTerm, $event)\\\"  -->\\n                <div id='wordGetter'  (input)=\\\"searchTerm = $event.target.innerText\\\"  ngDefaultControl contenteditable [(ngModel)]=\\\"searchTerm\\\" class=\\\"border wordDiv\\\"></div> <br>  \\n            </div>\\n            \\n            <!-- <div>For</div> -->\\n            <div class=\\\"\\\">\\n                <button [disabled]='searchTerm.trim().length == 0' href=\\\"#fakelink\\\" id=\\\"searchBtn\\\" (click)=\\\"sendSearcher()\\\" class=\\\"btn btn-danger btn-round btn-fill btn-lg\\\">Find Out!</button>\\n            </div>\\n        </div>\\n        <div class=\\\"img-src\\\" style=\\\"background-image: url('assets/img/cover_4.jpg')\\\"></div>\\n        <div class='img-src blur' style=\\\"background-image: url('assets/img/cover_4_blur.jpg')\\\"></div>\\n    </div>\\n    \\n\\n\\n</div>    \\n<div *ngIf=\\\"gotResults\\\" id=\\\"helpShowerDiv\\\" class=\\\"parallax-pro\\\">\\n    <div class=\\\"img-src\\\" style=\\\"background-image: url('http://get-shit-done-pro.herokuapp.com/assets/img/bg6.jpg');\\\"></div>\\n    <div class=\\\"container\\\">\\n        \\n        <div class=\\\"col-md-6 col-md-offset-3 col-md-12 text-center\\\">\\n            <h1 class=\\\"hello text-center\\\">\\n               <a href=\\\"http://gsdk.creative-tim.com\\\">Here are your results <span class=\\\"label label-warning\\\"> :)</span></a>\\n               <small>\\n               <div id=\\\"resultsDiv\\\">\\n                    <div id=\\\"resultsDivContainer\\\">\\n                        <ul class=\\\"pull-left list-unstyled\\\">\\n                            <li *ngFor=\\\"let helpfulWord of helpfulWordsArr\\\" >\\n                                {{ helpfulWord }}\\n                            </li>\\n                        </ul>\\n                    </div>                    \\n               </div>\\n                \\n                </small>\\n            </h1>\\n        </div>\\n    </div>\\n</div>  \\n\\n<!--  Info Modal -->\\n<div *ngIf=\\\"isModalShown\\\" [config]=\\\"{ show: true }\\\" (onHidden)=\\\"hideInfoModal()\\\" bsModal #autoShownModal=\\\"bs-modal\\\" class=\\\"modal fade\\\"\\n    [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"mySmallModalLabel\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog \\\">\\n        <div class=\\\"modal-content \\\">\\n            <div class=\\\"modal-title info-modal-title\\\">     \\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                            <span class=\\\"text-danger\\\">\\n                                Sorry!    \\n                            </span>                            \\n                            <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"autoShownModal.hide()\\\">\\n                                <span aria-hidden=\\\"true\\\">&times;</span>\\n                            </button>                        \\n                    </div>\\n                </div>       \\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                \\n               {{infoMessage}}\\n            </div>\\n        </div>\\n    <!-- </div> -->\\n</div>\\n<!--  Info Modal -->\\n\\n\\n<router-outlet></router-outlet>\\n\\n\"","import { Component, TemplateRef } from '@angular/core';\nimport { FormsModule } from '@angular/forms'; \nimport { TalkService } from './services/talk.service'\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [ TalkService ]\n})\nexport class AppComponent {\n\n  title = 'app';\n  searchTerm = '';\n  gotResults: boolean = false;\n  helpfulWordsArr: object = [];\n  modalRef: BsModalRef;\n  isModalShown: boolean = false;\n  infoMessage: string = '';\n\n  constructor(private talkService: TalkService, private modalService: BsModalService){\n  }\n\n  searchTermSetter(search){  \t\n  }\n  validateStr(str){\n  \treturn str.replace(/[^a-zA-Z]/gi, '');\n  }\n  showInfoModal(){\n  \tthis.isModalShown = true;\n  }\n  hideInfoModal(){\n  \tthis.isModalShown = false;\n  }\n  sendSearcher(){\n\t\t\n\tthis.infoMessage = '';\n  \tlet searchString = this.searchTerm.trim()\n  \tthis.talkService.wassup({searchTerm: searchString}).subscribe( (subRes: any) => {\n\t\t\n  \t\tif(subRes.success && subRes.data){\n\n  \t\t\tif(subRes.data.length > 0){\n  \t\t\t\tthis.infoMessage = '';\n\t\t\t\tthis.helpfulWordsArr = subRes.data;\n\t  \t\t\tthis.gotResults = true;\t\n\t\t\t\tvar target = document.getElementById(\"helpShowerDiv\"); \n\t\t\t\tif(target){\n\t\t\t\t\tanimate(document.scrollingElement || document.documentElement, \"scrollTop\", \"\", 0, target.offsetTop, 1000, true);\n\t\t\t\t}\t\t\t\t  \t\n  \t\t\t}\n  \t\t\telse{\n  \t\t\t\tvar target = document.getElementById(\"navbar-full\"); \n  \t\t\t\tif(target){\n  \t\t\t\t\tanimate(document.scrollingElement || document.documentElement, \"scrollTop\", \"\", 0, target.offsetTop, 1000, true);  \t\t\n  \t\t\t\t}\n\t\t\t\t\n  \t\t\t\tthis.infoMessage = 'No Valid Combinations in the Dictionary! Please Try Another Combination of Words!';\n  \t\t\t\tthis.showInfoModal();\n  \t\t\t}  \t\t\t\t\t\n  \t\t}\n  \t\telse{\n  \t\t\tvar target = document.getElementById(\"navbar-full\"); \n  \t\t\tif(target){\n  \t\t\t\tanimate(document.scrollingElement || document.documentElement, \"scrollTop\", \"\", 0, target.offsetTop, 1000, true); \t\n  \t\t\t}\t\t\n  \t\t\tthis.gotResults = false;\n  \t\t\tthis.helpfulWordsArr = [];\n  \t\t\tthis.infoMessage = subRes.message;  \t\t\t\t\n\t\t\tthis.showInfoModal();\n  \t\t}\n  \t},\n  \t(err) => {\n  \t\tvar target = document.getElementById(\"navbar-full\"); \n  \t\tif(target){\n  \t\t\tanimate(document.scrollingElement || document.documentElement, \"scrollTop\", \"\", 0, target.offsetTop, 1000, true);\n\t\t}\n\t\t \n  \t\tthis.infoMessage = 'The server seems to be down! Let Classic Man Know! Try Again Soon!';  \t\t\t\t\n\t\tthis.showInfoModal();\n  \t\tconsole.log('sub err')\n  \t\tconsole.log(err)\n  \t} );\n  }\n\n}\n\nfunction animate(elem, style, unit, from, to, time, prop) {\n\t\n    if (!elem) {\n        return;\n    }\n    var start = new Date().getTime(),\n        timer = setInterval(function () {\n            var step = Math.min(1, (new Date().getTime() - start) / time);\n            if (prop) {\n                elem[style] = (from + step * (to - from))+unit;\n            } else {\n                elem.style[style] = (from + step * (to - from))+unit;\n            }\n            if (step === 1) {\n                clearInterval(timer);\n            }\n        }, 25);\n    if (prop) {\n    \t  elem[style] = from+unit;\n    } else {\n    \t  elem.style[style] = from+unit;\n    }\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './/app-routing.module';\nimport { HeroesComponent } from './heroes/heroes.component';\nimport { FormsModule } from '@angular/forms';\nimport { TalkService } from './services/talk.service'\nimport { HttpClientModule } from '@angular/common/http';\n// import { BsModalService } from 'ngx-bootstrap/modal';\n// import { SmoothScrollToDirective, SmoothScrollDirective } from \"ng2SmoothScroll\";\nimport { ModalModule } from 'ngx-bootstrap';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeroesComponent,\n    // SmoothScrollToDirective,\n    // SmoothScrollDirective\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    ModalModule.forRoot()\n  ],\n  providers: [ TalkService,  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  heroes works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-heroes',\n  templateUrl: './heroes.component.html',\n  styleUrls: ['./heroes.component.css']\n})\nexport class HeroesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\n\nimport { HttpHeaders } from '@angular/common/http';\n\nimport { environment } from '../../environments/environment';\n\nconsole.log('rock ready');\nconsole.log(environment);\n@Injectable({\n  providedIn: 'root'\n})\nexport class TalkService {\n\n  constructor(private http: HttpClient) { }\n\n  \tgetHeaders() {\n        let headers = new Headers;\n        headers.append('authorization', 'token')\n        let options = new RequestOptions({ headers: headers })\n        return options\n    }\n  \twassup(body) {\n\n  \t\t// application/x-www-form-urlencoded\n  \t\t// application/json\n  \t\t\n\t\tconst httpOptions = {\n\t\t  headers: new HttpHeaders({\n\t\t    'Content-Type':  'application/json',\n\t\t    'Authorization': 'my-auth-token'\n\t\t  })\n\t\t};\n\t  return this.http.post(environment.helperServer+'/forhelp', body, httpOptions)\n\t}\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  helperServer: 'https://harryshelper.herokuapp.com'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}